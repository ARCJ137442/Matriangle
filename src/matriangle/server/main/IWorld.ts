import IMatrix from './IMatrix'
import IWorldRegistry from '../api/registry/IWorldRegistry'

/**
 * TODO: 有待理清架构
 * 1. 抽象出一个带说明、包含「事件处理」的「世界接口」
 * 2. 让「世界」实现这个接口
 *
 * ?【2023-10-08 16:51:21】目前「母体」似乎更多将「注册表」包含在内，而「世界」似乎干不了什么
 * * 当前想法：处理一些「母体之外的事」
 *
 * 📄原始想法：
 * ```
 * 世界只需要提供一个通用的API
 * 负责最基本的加载（方块内容、实体内容、地图内容）
 * 以及运行（世界时钟、事件分派）
 * 基本就够了
 *
 * 剩下的一些与本身运作模式毫不相干的东西
 * 完全可以外包到某个 / 某些「注册机制」（或者更简单的说，「世界模组」）里
 * 机制（内容）与运作（形式）分离
 * 这样就可以最大化其中的通用性……
 * ```
 */

export default interface IWorld {
	//========世界运作：母体========//
	get matrix(): IMatrix

	//========注册机制：总注册表========//
	get registry(): IWorldRegistry
}
